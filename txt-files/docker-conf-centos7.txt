# /etc/sysconfig/docker

# Modify these options if you want to change the way the docker daemon runs
OPTIONS='--selinux-enabled -g /opt/mount1/docker -p /var/run/docker.pid -H tcp://0.0.0.0:2375 -H unix://var/run/docker.sock --dns 16.110.135.51 --dns 16.110.135.52 --insecure-registry sa-docker-registry.itcs.hp.com --insecure-registry sa-docker-registry-dev.itcs.hp.com --insecure-registry sa-docker-registry.itcs.hpecorp.net'

DOCKER_CERT_PATH=/etc/docker

# If you want to add your own registry to be used for docker search and docker
# pull use the ADD_REGISTRY option to list a set of registries, each prepended
# with --add-registry flag. The first registry added will be the first registry
# searched.
#ADD_REGISTRY='--add-registry sa-docker-registry.itcs.hp.com/sa20'
#ADD_REGISTRY='--add-registry registry.access.redhat.com'

# If you want to block registries from being used, uncomment the BLOCK_REGISTRY
# option and give it a set of registries, each prepended with --block-registry
# flag. For example adding docker.io will stop users from downloading images
# from docker.io
# BLOCK_REGISTRY='--block-registry'

# If you have a registry secured with https but do not have proper certs
# distributed, you can tell docker to not look for full authorization by
# adding the registry to the INSECURE_REGISTRY line and uncommenting it.
# INSECURE_REGISTRY='--insecure-registry'

# On an SELinux system, if you remove the --selinux-enabled option, you
# also need to turn on the docker_transition_unconfined boolean.
# setsebool -P docker_transition_unconfined 1

# Location used for temporary files, such as those created by
# docker load and build operations. Default is /var/lib/docker/tmp
# Can be overriden by setting the following environment variable.
# DOCKER_TMPDIR=/var/tmp

# Controls the /etc/cron.daily/docker-logrotate cron job status.
# To disable, uncomment the line below.
# LOGROTATE=false

HTTPS_PROXY=http://web-proxy.corp.hpecorp.net:8080
HTTP_PROXY=http://web-proxy.corp.hpecorp.net:8080
#export HTTPS_PROXY=http://web-proxy.corp.hpecorp.net:8080
#export HTTP_PROXY=http://web-proxy.corp.hpecorp.net:8080
----------------------------------------------------------------------------

[Service]
ExecStart=
ExecStart=/usr/bin/docker daemon -s overlay -g /opt/mount1/docker -H tcp://0.0.0.0:2375 -H fd:// -H unix://var/run/docker.sock --dns {{ docker.dns_one }} --dns {{ docker.dns_two }} --insecure-registry sa-docker-registry.itcs.hp.com  --insecure-registry sa-docker-registry.itcs.hpecorp.net

# -H fd://[angadic@c4t20957 templates]$

[Unit]
Description=Docker Application Container Engine
Documentation=https://docs.docker.com
After=network.target docker.socket
Requires=docker.socket

[Service]
Type=notify
EnvironmentFile=-/etc/sysconfig/docker
EnvironmentFile=-/etc/sysconfig/docker-storage
EnvironmentFile=-/etc/sysconfig/docker-network
Environment=GOTRACEBACK=crash
ExecStart=/usr/bin/docker daemon -H fd:// $OPTIONS \
          $DOCKER_STORAGE_OPTIONS \
          $DOCKER_NETWORK_OPTIONS \
          $ADD_REGISTRY \
          $BLOCK_REGISTRY \
          $INSECURE_REGISTRY
MountFlags=slave
LimitNOFILE=1048576
LimitNPROC=1048576
LimitCORE=infinity

[Install]
WantedBy=multi-user.target

-------------------------------------------------------------------






